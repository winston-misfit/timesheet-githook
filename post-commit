#!/bin/sh

# Allows us to read user input below, assigns stdin to keyboard
exec < /dev/tty

# Ask for JIRA credentials and store the base64 encoded version of what the user enters
parse_jira_credentials() {
  echo "Please enter your jira username (not your email): "; 
  read username;  
  
  echo "Please enter your jira password";
  stty -echo
  read password;
  stty echo

  jira_credentials=$(printf "$username":"$password" | base64)
  echo "$jira_credentials" > "$jira_credentials_file" 
}

# Parse the git branch
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

parse_git_commit() {
  git log -1 HEAD --pretty=%B 2> /dev/null | sed -E 's/\[([A-Z1-9-]*)\].*/\1/'
}

# Parse the JIRA ticket in the branch
parse_jira_ticket_in_branch() {
  parse_git_branch | grep -e '[A-Za-z]\+-[0-9]\+' -o
}

# Parse the JIRA ticket in the commit message
parse_jira_ticket_in_commit() {
  parse_git_commit | grep -e '[A-Za-z]\+-[0-9]\+' -o
}

# Read JIRA credentials if they exist
jira_credentials_file="`git rev-parse --git-dir`/hooks/jira_credentials.txt"

# If the user's branch does not include a JIRA ticket number, they are not eligible to log time with this hook
ticket=`parse_jira_ticket_in_commit`

# Look up branch ticket...
if [ "$ticket" == "" ]; then
  ticket=`parse_jira_ticket_in_branch`
fi

# Find out if this is a smart commit (e.g. git commit -m "JQWE-123 #time 1h #comment fixed it" will log 1 hour already)
commit_message=$(git log -1 HEAD --pretty=%B)
if [[ "$commit_message" == *"#time"* ]]; then
  is_smart_commit=true
else
  is_smart_commit=false
fi

# If the user does not have jira credentials stored, we'll need to ask them to enter credentials
if [ -e "$jira_credentials_file" ]; then
  jira_credentials=$(cat "$jira_credentials_file")
else
  parse_jira_credentials
fi

log_time(){
  read -p "[post-commit hook] How long did that take to do? (e.g. 1d 2h 30m) " time
  if [ "$time" = "" ]; then
    exit
  else
    response=$(eval curl "-D- --write-out %{http_code} --silent --output /dev/null -X POST -d '{\"timeSpent\":\"$time\",\"comment\":\"$commit_message\"}' -H 'Authorization: Basic $1' -H 'Content-Type: application/json' https://misfit.jira.com/rest/api/2/issue/\"$2\"/worklog")
    if [[ $response =~ "201 Created" ]]; then
      echo "[post-commit hook] $time successfully logged to $ticket!"
    elif [[ $response =~ "401 Unauthorized" ]]; then
      read -p "[post-commit hook] $time was not logged successfully to $ticket. If you have updated your credentials in JIRA, press 'u' to update them here so that this hook works on your next commit. Otherwise, hit enter to ignore. " option
      if [[ $option == "u" ]]; then
        parse_jira_credentials
      else
        exit
      fi
    elif [[ $response =~ "400 Bad Request" ]]; then
      read -p "[post-commit hook] $time was not logged successfully to $ticket. Check the format of your time. Try again? (y/n) " option
      if [ $option == "y" ] || [ $option == "Y" ]; then
        log_time $1 $2
      else
        exit
      fi
    else
      read -p "[post-commit hook] $time was not logged successfully to $ticket for an unknown reason. Try again? (y/n) " option
      if [ $option == "y" ] || [ $option == "Y" ]; then
        log_time $1 $2
      else
        exit
      fi
    fi
    exit
  fi
}

# If the branch has a ticket number and the commit is not a smart commit, prompt the user for time logging
if [ "$ticket" != "" ] && [ "$is_smart_commit" = false ]; then
  log_time $jira_credentials $ticket
else
  exit
fi
